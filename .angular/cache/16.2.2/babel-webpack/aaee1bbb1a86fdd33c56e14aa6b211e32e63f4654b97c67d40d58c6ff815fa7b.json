{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction AppComponent_li_4_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const todo_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"'\", todo_r1.task, \"' task is completed\");\n  }\n}\nfunction AppComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"input\", 1);\n    i0.ɵɵlistener(\"change\", function AppComponent_li_4_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const todo_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.toggleTodoCompleted(todo_r1));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, AppComponent_li_4_div_4_Template, 2, 1, \"div\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const todo_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", todo_r1.completed);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(todo_r1.task);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", todo_r1.completed);\n  }\n}\nexport class AppComponent {\n  constructor() {\n    this.title = 'firstApp';\n    this.inputValue = \"Initial Value\";\n    this.todos = [{\n      id: 1,\n      task: 'swimming',\n      completed: false\n    }, {\n      id: 2,\n      task: 'reading',\n      completed: false\n    }, {\n      id: 3,\n      task: 'go to gym',\n      completed: false\n    }];\n  }\n  toggleTodoCompleted(todo) {\n    todo.completed = !todo.completed;\n  }\n}\n_class = AppComponent;\n_class.ɵfac = function AppComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-root\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"type\", \"checkbox\", 3, \"checked\", \"change\"], [4, \"ngIf\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n      i0.ɵɵtext(2, \"Two Way Data-Binding\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"ul\");\n      i0.ɵɵtemplate(4, AppComponent_li_4_Template, 5, 3, \"li\", 0);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.todos);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","todo_r1","task","ɵɵlistener","AppComponent_li_4_Template_input_change_1_listener","restoredCtx","ɵɵrestoreView","_r5","$implicit","ctx_r4","ɵɵnextContext","ɵɵresetView","toggleTodoCompleted","ɵɵtemplate","AppComponent_li_4_div_4_Template","ɵɵproperty","completed","ɵɵtextInterpolate","AppComponent","constructor","title","inputValue","todos","id","todo","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_li_4_Template"],"sources":["C:\\Users\\CSE DEPARTMENT\\Desktop\\202100059\\my-app\\src\\app\\app.component.ts","C:\\Users\\CSE DEPARTMENT\\Desktop\\202100059\\my-app\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'firstApp';\n  inputValue:string = \"Initial Value\";\n  todos = [\n    { id: 1, task: 'swimming',completed:false },\n    { id: 2, task: 'reading',completed:false },\n    { id: 3, task: 'go to gym',completed:false }\n  ];\n  toggleTodoCompleted(todo: any) {\n    todo.completed = !todo.completed;\n  }\n}\n\n","<div>\n  <h1>Two Way Data-Binding</h1>\n  <ul>\n     <li *ngFor=\"let todo of todos\">\n       <input type=\"checkbox\" [checked]=\"todo.completed\" (change)=\"toggleTodoCompleted(todo)\">\n       <span>{{ todo.task }}</span>\n       <div *ngIf=\"todo.completed\">'{{todo.task}}' task is completed</div>\n     </li>\n   </ul>\n</div>\n"],"mappings":";;;;;ICMOA,EAAA,CAAAC,cAAA,UAA4B;IAAAD,EAAA,CAAAE,MAAA,GAAiC;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IAAvCH,EAAA,CAAAI,SAAA,GAAiC;IAAjCJ,EAAA,CAAAK,kBAAA,MAAAC,OAAA,CAAAC,IAAA,wBAAiC;;;;;;IAH/DP,EAAA,CAAAC,cAAA,SAA+B;IACqBD,EAAA,CAAAQ,UAAA,oBAAAC,mDAAA;MAAA,MAAAC,WAAA,GAAAV,EAAA,CAAAW,aAAA,CAAAC,GAAA;MAAA,MAAAN,OAAA,GAAAI,WAAA,CAAAG,SAAA;MAAA,MAAAC,MAAA,GAAAd,EAAA,CAAAe,aAAA;MAAA,OAAUf,EAAA,CAAAgB,WAAA,CAAAF,MAAA,CAAAG,mBAAA,CAAAX,OAAA,CAAyB;IAAA,EAAC;IAAtFN,EAAA,CAAAG,YAAA,EAAuF;IACvFH,EAAA,CAAAC,cAAA,WAAM;IAAAD,EAAA,CAAAE,MAAA,GAAe;IAAAF,EAAA,CAAAG,YAAA,EAAO;IAC5BH,EAAA,CAAAkB,UAAA,IAAAC,gCAAA,iBAAmE;IACrEnB,EAAA,CAAAG,YAAA,EAAK;;;;IAHoBH,EAAA,CAAAI,SAAA,GAA0B;IAA1BJ,EAAA,CAAAoB,UAAA,YAAAd,OAAA,CAAAe,SAAA,CAA0B;IAC3CrB,EAAA,CAAAI,SAAA,GAAe;IAAfJ,EAAA,CAAAsB,iBAAA,CAAAhB,OAAA,CAAAC,IAAA,CAAe;IACfP,EAAA,CAAAI,SAAA,GAAoB;IAApBJ,EAAA,CAAAoB,UAAA,SAAAd,OAAA,CAAAe,SAAA,CAAoB;;;ADCjC,OAAM,MAAOE,YAAY;EALzBC,YAAA;IAME,KAAAC,KAAK,GAAG,UAAU;IAClB,KAAAC,UAAU,GAAU,eAAe;IACnC,KAAAC,KAAK,GAAG,CACN;MAAEC,EAAE,EAAE,CAAC;MAAErB,IAAI,EAAE,UAAU;MAACc,SAAS,EAAC;IAAK,CAAE,EAC3C;MAAEO,EAAE,EAAE,CAAC;MAAErB,IAAI,EAAE,SAAS;MAACc,SAAS,EAAC;IAAK,CAAE,EAC1C;MAAEO,EAAE,EAAE,CAAC;MAAErB,IAAI,EAAE,WAAW;MAACc,SAAS,EAAC;IAAK,CAAE,CAC7C;;EACDJ,mBAAmBA,CAACY,IAAS;IAC3BA,IAAI,CAACR,SAAS,GAAG,CAACQ,IAAI,CAACR,SAAS;EAClC;;SAVWE,YAAY;;mBAAZA,MAAY;AAAA;;QAAZA,MAAY;EAAAO,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCPzBpC,EAAA,CAAAC,cAAA,UAAK;MACCD,EAAA,CAAAE,MAAA,2BAAoB;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAC7BH,EAAA,CAAAC,cAAA,SAAI;MACDD,EAAA,CAAAkB,UAAA,IAAAoB,0BAAA,gBAIK;MACPtC,EAAA,CAAAG,YAAA,EAAK;;;MALkBH,EAAA,CAAAI,SAAA,GAAQ;MAARJ,EAAA,CAAAoB,UAAA,YAAAiB,GAAA,CAAAV,KAAA,CAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}